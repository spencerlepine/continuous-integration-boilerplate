name: branch_check

on:
  push:
    branches:
      - '*'
      - '!main'
  pull_request:
    branches:
      - main

env:
  CI: true
  NODE_ENV: test
  API_TOKEN: DGANGkghJGIWRL

jobs:
  branch_check:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node: ['12', '14', '16']
        os: [ubuntu-latest]

    name: Node ${{ matrix.node }} on ${{ matrix.os }}
    steps:
      - name: ‚ôªÔ∏è Check out Git Repository
        uses: actions/checkout@v2

      - name: üîñ  Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

            - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: ‚¨áÔ∏è  Install npm dependencies
        run: npm install

      - name: üßΩ Lint all files
        run: npm run lint:check

      - name: ‚úÖ  Run tests
        run: npm run test -- --coverage

      - name: üîÆ Report test coverage
        if: github.event_name == 'pull_request'
        uses: artiomtr/jest-coverage-report-action@v2.0-rc.5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          skip-step: all
          # threshold: 60 # optional parameter
          # test-script: npm run test:custom
